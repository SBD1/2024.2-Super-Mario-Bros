{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"In\u00edcio","text":"<p>Super Mario Bros \u00e9 um dos jogos mais ic\u00f4nicos e influentes da hist\u00f3ria dos videogames, lan\u00e7ado pela Nintendo em 1985 para o console Nintendo Entertainment System (NES). O jogo foi criado por Shigeru Miyamoto e foi um dos primeiros jogos de plataforma a ganhar popularidade em massa, definindo o g\u00eanero e estabelecendo a base para muitos dos jogos modernos.</p> <p>\ud83d\udd79\ufe0f Hist\u00f3ria do Jogo</p> <p>No jogo, voc\u00ea controla o personagem Mario, um encanador italiano, que embarca em uma jornada para salvar a Princesa Peach do vil\u00e3o Bowser, o Rei dos Koopas. A hist\u00f3ria se passa no Reino do Cogumelo, onde Bowser sequestrou a princesa e transformou seus habitantes em blocos e objetos m\u00e1gicos.</p>"},{"location":"#equipe-do-projeto","title":"Equipe do Projeto","text":"<p> Alana Gabriele Fabio Fonteneles Gustavo Alves Renan Ara\u00fajo Vin\u00edcius Mendes <p></p>"},{"location":"#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) 1.0 14/11/2024 Cria\u00e7\u00e3o da p\u00e1gina Alana Gabriele"},{"location":"algebra-relacional/","title":"\u00c1lgebra Relacional","text":""},{"location":"algebra-relacional/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>\u00c0lgebra relacional \u00e9 a base te\u00f3rica para manipular e consultar dados em bancos de dados relacionais. Ela utiliza um conjunto de opera\u00e7\u00f5es para transformar ou combinar rela\u00e7\u00f5es (tabelas), gerando novas rela\u00e7\u00f5es sem alterar os dados originais. Essencial para sistemas de banco de dados, a \u00e1lgebra relacional \u00e9 usada internamente para processar e otimizar consultas SQL, fornecendo uma linguagem formal para descrever opera\u00e7\u00f5es sobre dados.</p>"},{"location":"algebra-relacional/#consultas","title":"Consultas","text":""},{"location":"algebra-relacional/#listar-todos-os-yoshis-e-seus-blocos-associados","title":"Listar todos os Yoshis e seus blocos associados","text":"<p>\u03c0(nome, tipo)(Yoshi\u22c8Bloco)</p>"},{"location":"algebra-relacional/#listar-todos-os-inimigos-e-seu-tipo","title":"Listar todos os inimigos e seu tipo","text":"<p>\u03c0(idInimigo, tipo)(Inimigo)</p>"},{"location":"algebra-relacional/#listar-todos-os-itens-no-inventario-de-um-jogador-especifico","title":"Listar todos os itens no invent\u00e1rio de um jogador espec\u00edfico","text":"<p>\u03c0(tipo, quantidade)(\u03c3idJogador = 1)(Invent\u00e1rio\u22c8Item)</p>"},{"location":"algebra-relacional/#listar-o-jogador-seu-yoshi-e-suas-moedas","title":"Listar o jogador seu Yoshi e suas moedas","text":"<p>\u03c0(idJogador, moeda, nome)(Jogador\u22c8Yoshi)</p>"},{"location":"algebra-relacional/#listar-todos-os-checkpoints-de-um-determinado-local","title":"Listar todos os checkpoints de um determinado local","text":"<p>\u03c0(idCheckpoint, pontua\u00e7\u00e3o)(\u03c3nome = 'Mundo 1')(Checkpoint\u22c8Local)</p>"},{"location":"algebra-relacional/#listar-todos-os-itens-de-um-bloco-especifico","title":"Listar todos os itens de um bloco espec\u00edfico","text":"<p>\u03c0(tipo, efeito)(\u03c3idBloco = 2)(Item\u22c8Bloco)</p>"},{"location":"algebra-relacional/#listar-todas-as-fases-e-seus-mundos","title":"Listar todas as fases e seus mundos","text":"<p>\u03c0nome (Fase), nome (Mundo)(Fase\u22c8Mundo)</p>"},{"location":"algebra/","title":"\u00c1lgebra Relacional","text":""},{"location":"algebra/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>A \u00e1lgebra relacional \u00e9 um conjunto de opera\u00e7\u00f5es matem\u00e1ticas utilizadas para manipular e consultar dados armazenados em bancos de dados relacionais. Ela serve como a base te\u00f3rica para a linguagem SQL (Structured Query Language), que \u00e9 amplamente utilizada para gerenciar e consultar bancos de dados.</p> <p>[ \\pi_{\\text{nome_item}, \\text{quantidade}}((\\sigma_{\\text{nome} = 'Mario'}(\\text{Jogador}) \\bowtie_{\\text{id_jogador} = \\text{id_jogador}} \\text{Inventario}) \\bowtie_{\\text{id_item} = \\text{id_item}} \\sigma_{\\text{nome_item} = 'Cogumelo'}(\\text{Item})) ]</p> <p>\u00c1lgebra Relacional para a busca de um cogumelo no invent\u00e1rio do jogador. Autores: Alana, Fabio, Gustavo, Renan e Vin\u00edcius.</p>"},{"location":"algebra/#fundamentos-da-algebra-relacional","title":"Fundamentos da \u00c1lgebra Relacional","text":"<p>Na \u00e1lgebra relacional, os dados s\u00e3o organizados em rela\u00e7\u00f5es (ou tabelas), que s\u00e3o compostas por tuplas (linhas) e atributos (colunas). Cada rela\u00e7\u00e3o \u00e9 uma representa\u00e7\u00e3o de uma entidade ou um relacionamento entre entidades no mundo real. As opera\u00e7\u00f5es da \u00e1lgebra relacional permitem a manipula\u00e7\u00e3o dessas rela\u00e7\u00f5es para produzir novas rela\u00e7\u00f5es, facilitando a consulta e a an\u00e1lise dos dados.</p>"},{"location":"apresentacao/","title":"Apresenta\u00e7\u00e3o","text":""},{"location":"apresentacao/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O documento apresenta o v\u00eddeo explicativo sobre o projeto relacionado ao Super Mario Bros.</p>"},{"location":"apresentacao/#video","title":"V\u00eddeo","text":""},{"location":"apresentacao/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor(es) 1.0 25/11/2024 V\u00eddeo Alana Gabriele"},{"location":"apresentacao2/","title":"Apresenta\u00e7\u00e3o","text":""},{"location":"apresentacao2/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O documento apresenta a entrega 2 sobre o projeto relacionado ao Super Mario Bros.</p>"},{"location":"apresentacao2/#video","title":"V\u00eddeo","text":""},{"location":"apresentacao3/","title":"Apresenta\u00e7\u00e3o","text":""},{"location":"apresentacao3/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O documento apresenta a entrega 3 sobre o projeto relacionado ao Super Mario Bros.</p>"},{"location":"apresentacao3/#video","title":"V\u00eddeo","text":""},{"location":"apresentacao4/","title":"Apresenta\u00e7\u00e3o","text":""},{"location":"apresentacao4/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O documento apresenta a entrega 4 sobre o projeto relacionado ao Super Mario Bros.</p>"},{"location":"apresentacao4/#video","title":"V\u00eddeo","text":""},{"location":"ddl/","title":"DDL","text":""},{"location":"ddl/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O DDL (Data Definition Language) \u00e9 uma parte essencial do SQL (Structured Query Language), respons\u00e1vel pela defini\u00e7\u00e3o da estrutura de um banco de dados.</p> <p>Com a DDL, \u00e9 poss\u00edvel criar, alterar e excluir objetos no banco de dados, como tabelas, \u00edndices, esquemas, vis\u00f5es e outros elementos relacionados \u00e0 organiza\u00e7\u00e3o dos dados.</p> <p>Por meio dela, desenvolvedores e administradores podem configurar a estrutura base que ser\u00e1 utilizada para armazenar e gerenciar informa\u00e7\u00f5es, garantindo uma organiza\u00e7\u00e3o eficiente e flex\u00edvel para os sistemas que utilizam bancos de dados relacionais.</p>"},{"location":"ddl/#descricao-das-tabelas-e-entidades","title":"Descri\u00e7\u00e3o das Tabelas e Entidades","text":""},{"location":"ddl/#yoshi","title":"Yoshi","text":"<p>A tabela Yoshi armazena informa\u00e7\u00f5es sobre a entidade Yoshi no sistema.</p> <pre><code>CREATE TABLE Yoshi (\n    idYoshi SERIAL NOT NULL,\n    nome VARCHAR(20) NOT NULL,\n    CONSTRAINT yoshi_pk PRIMARY KEY (idYoshi)\n);\n</code></pre> <p>Colunas:</p> <ul> <li><code>idYoshi</code>: Identificador \u00fanico de Yoshi (chave prim\u00e1ria).</li> <li><code>nome</code>: Nome de Yoshi.</li> </ul>"},{"location":"ddl/#bloco","title":"Bloco","text":"<p>A tabela Bloco armazena detalhes sobre os blocos existentes no jogo.</p> <pre><code>CREATE TABLE Bloco (\n    idBloco SERIAL NOT NULL,\n    tipo VARCHAR(30) NOT NULL,\n    idItem INTEGER,\n    idYoshi INTEGER,\n    idMoeda INTEGER,\n    idFase INTEGER, -- Removendo o NOT NULL\n    CONSTRAINT bloco_pk PRIMARY KEY (idBloco),\n    FOREIGN KEY (idItem) REFERENCES Item(idItem) ON DELETE SET NULL,\n    FOREIGN KEY (idYoshi) REFERENCES Yoshi(idYoshi) ON DELETE SET NULL,\n    FOREIGN KEY (idMoeda) REFERENCES Moeda(idMoeda) ON DELETE SET NULL,\n    FOREIGN KEY (idFase) REFERENCES Fase(idFase)\n);\n</code></pre> <p>Colunas:</p> <ul> <li><code>idBloco</code>: Identificador \u00fanico do bloco (chave prim\u00e1ria).</li> <li><code>tipo</code>: Tipo do bloco.</li> <li><code>idItem</code>: Refer\u00eancia ao item relacionado ao bloco.</li> <li><code>idYoshi</code>: Refer\u00eancia ao yoshi relacionado ao bloco.</li> <li><code>idMoeda</code>: Refer\u00eancia ao moeda relacionado ao bloco.</li> <li><code>idFase</code>: Refer\u00eancia ao fase relacionado ao bloco.</li> </ul>"},{"location":"ddl/#mundo","title":"Mundo","text":"<p>A tabela Mundo armazena informa\u00e7\u00f5es sobre os mundos dispon\u00edveis no jogo.</p> <pre><code>CREATE TABLE Mundo (\n    idMundo SERIAL NOT NULL,\n    nome VARCHAR(50) NOT NULL,\n    idLoja INTEGER NOT NULL,\n    descri\u00e7\u00e3o TEXT,\n    nivel INTEGER NOT NULL,\n    CONSTRAINT mundo_pk PRIMARY KEY (idMundo),\n    CONSTRAINT loja_item_loja_fk FOREIGN KEY (idLoja) REFERENCES Loja(idLoja) ON DELETE CASCADE\n);\n</code></pre> <p>Colunas:</p> <ul> <li><code>idMundo</code>: Identificador \u00fanico do mundo (chave prim\u00e1ria).</li> <li><code>nome</code>: Nome do mundo.</li> <li><code>descri\u00e7\u00e3o</code>: Detalhes descritivos sobre o mundo.</li> <li><code>nivel</code>: N\u00edvel associado ao mundo.</li> <li><code>idLoja</code>: Refer\u00eancia a loja associado.</li> </ul>"},{"location":"ddl/#fase","title":"Fase","text":"<p>A tabela Fase organiza os est\u00e1gios do jogo.</p> <pre><code>CREATE TABLE Fase (\n    idFase SERIAL NOT NULL,\n    nome VARCHAR(15) NOT NULL,\n    nivel INTEGER NOT NULL,\n    idMundo INTEGER NOT NULL,\n    CONSTRAINT fase_pk PRIMARY KEY (idFase),\n    FOREIGN KEY (idMundo) REFERENCES Mundo(idMundo)\n);\n</code></pre> <p>Colunas:</p> <ul> <li><code>idFase</code>: Identificador \u00fanico da fase (chave prim\u00e1ria).</li> <li><code>nome</code>: Nome da fase.</li> <li><code>nivel</code>: N\u00edvel da fase.</li> <li><code>idMundo</code>: Refer\u00eancia ao mundo ao qual a fase pertence.</li> </ul>"},{"location":"ddl/#inventario","title":"Invent\u00e1rio","text":"<p>A tabela Invent\u00e1rio armazena informa\u00e7\u00f5es sobre os itens em posse do jogador.</p> <pre><code>CREATE TABLE Inventario (\n    idInventario SERIAL NOT NULL,\n    quantidade INTEGER NOT NULL,\n    idItem INTEGER NOT NULL,\n    idPersonagem INTEGER NOT NULL,\n    CONSTRAINT inventario_pk PRIMARY KEY (idInventario),\n    FOREIGN KEY (idItem) REFERENCES Item(idItem),\n    FOREIGN KEY (idPersonagem) REFERENCES personagem(idpersonagem)\n);\n</code></pre> <p>Colunas:</p> <ul> <li><code>idIvent\u00e1rio</code>: Identificador \u00fanico do invent\u00e1rio (chave prim\u00e1ria).</li> <li><code>quantidade</code>: Quantidade de itens.</li> <li><code>IdItem</code>: Refer\u00eancia ao item.</li> <li><code>idPersonagem</code>: Refer\u00eancia ao personagem.</li> </ul>"},{"location":"ddl/#inimigo","title":"Inimigo","text":"<p>A tabela Inimigo registra detalhes sobre os inimigos no jogo.</p> <pre><code>CREATE TABLE Inimigo (\n    idInimigo SERIAL NOT NULL,\n    idPersonagem INTEGER NOT NULL,\n    tipo VARCHAR(15) NOT NULL,\n    habilidade VARCHAR(15) NOT NULL,\n    CONSTRAINT inimigo_pk PRIMARY KEY (idInimigo),\n    FOREIGN KEY (idPersonagem) REFERENCES Personagem(idPersonagem)\n);\n</code></pre> <p>Colunas:</p> <ul> <li><code>idInimigo</code>: Identificador \u00fanico do inimigo (chave prim\u00e1ria).</li> <li><code>tipo</code>: Tipo do inimigo.</li> <li><code>habilidade</code>: Habilidade do inimigo</li> </ul>"},{"location":"ddl/#moeda","title":"Moeda","text":"<p>A tabela Moeda armazena informa\u00e7\u00f5es sobre as moedas colet\u00e1veis.</p> <pre><code>CREATE TABLE Moeda (\n    idMoeda SERIAL NOT NULL,\n    valor INTEGER NOT NULL,\n    CONSTRAINT moeda_pk PRIMARY KEY (idMoeda)\n);\n</code></pre> <p>Colunas:</p> <ul> <li><code>idMoeda</code>: Identificador \u00fanico da moeda (chave prim\u00e1ria).</li> <li><code>valor</code>: Valor da moeda.</li> </ul>"},{"location":"ddl/#loja","title":"Loja","text":"<p>A tabela Loja armazena informa\u00e7\u00f5es sobre as lojas presentes no jogo.</p> <pre><code>CREATE TABLE Loja (\n    idLoja SERIAL NOT NULL,\n    nome VARCHAR(50) NOT NULL,\n    CONSTRAINT loja_pk PRIMARY KEY (idLoja)\n);\n</code></pre> <p>Colunas:</p> <ul> <li><code>idLoja</code>: Identificador \u00fanico da loja (chave prim\u00e1ria).</li> <li><code>nome</code>: Nome da loja.</li> </ul>"},{"location":"ddl/#item","title":"Item","text":"<p>A tabela Item armazena informa\u00e7\u00f5es sobre os itens dispon\u00edveis no jogo.</p> <pre><code>CREATE TABLE Item (\n    idItem SERIAL NOT NULL,\n    tipo VARCHAR(30) NOT NULL,\n    efeito VARCHAR(50),\n    dura\u00e7\u00e3o INTEGER,\n    raridade VARCHAR(20),\n    CONSTRAINT item_pk PRIMARY KEY (idItem)\n);\n</code></pre> <p>Colunas:</p> <ul> <li><code>idItem</code>: Identificador \u00fanico do item (chave prim\u00e1ria).</li> <li><code>tipo</code>: Tipo do item.</li> <li><code>efeito</code>: Efeito do item.</li> <li><code>dura\u00e7\u00e3o</code>: Dura\u00e7\u00e3o do efeito do item.</li> <li><code>raridade</code>: Raridade do item.</li> </ul>"},{"location":"ddl/#personagem","title":"Personagem","text":"<p>A tabela Personagem armazena informa\u00e7\u00f5es sobre os personagens no jogo.</p> <pre><code>CREATE TABLE Personagem (\n    idPersonagem SERIAL NOT NULL,\n    nome VARCHAR(20) NOT NULL,\n    vida INTEGER NOT NULL,\n    dano INTEGER NOT NULL,\n    pontos INTEGER NOT NULL,\n    idFase INTEGER, -- Removendo o NOT NULL\n    tipoJogador VARCHAR(15), -- \"Jogador\", \"Inimigo\", \"NPC\"\n    CONSTRAINT personagem_pk PRIMARY KEY (idPersonagem),\n    FOREIGN KEY (idFase) REFERENCES Fase(idFase)\n);\n</code></pre> <p>Colunas:</p> <ul> <li><code>idPersonagem</code>: Identificador \u00fanico do personagem (chave prim\u00e1ria).</li> <li><code>nome</code>: Nome do personagem.</li> <li><code>vida</code>: Vida do personagem.</li> <li><code>dano</code>: Dano causado pelo personagem.</li> <li><code>pontos</code>: Pontos associados ao personagem.</li> <li><code>idFase</code>: Refer\u00eancia a fase onde o personagem se encontra.</li> <li><code>tipoJogador</code>: Tipo do Jogador</li> </ul>"},{"location":"ddl/#local","title":"Local","text":"<p>A tabela Local armazena informa\u00e7\u00f5es sobre os locais no jogo.</p> <pre><code>CREATE TABLE Loja (\n    idLoja SERIAL NOT NULL,\n    nome VARCHAR(50) NOT NULL,\n    CONSTRAINT loja_pk PRIMARY KEY (idLoja)\n);\n</code></pre> <p>Colunas:</p> <ul> <li><code>idLocal</code>: Identificador \u00fanico do local (chave prim\u00e1ria).</li> <li><code>nome</code>: Nome do local.</li> </ul>"},{"location":"ddl/#checkpoint","title":"Checkpoint","text":"<p>A tabela Checkpoint registra informa\u00e7\u00f5es sobre os pontos de controle no jogo.</p> <pre><code>CREATE TABLE Checkpoint (\n    idCheckpoint SERIAL NOT NULL,\n    pontua\u00e7\u00e3o INTEGER NOT NULL,\n    CONSTRAINT checkpoint_pk PRIMARY KEY (idCheckpoint)\n);\n</code></pre> <p>Colunas:</p> <ul> <li><code>idCheckpoint</code>: Identificador \u00fanico do checkpoint (chave prim\u00e1ria).</li> <li><code>pontua\u00e7\u00e3o</code>: Pontua\u00e7\u00e3o registrada no checkpoint.</li> </ul>"},{"location":"ddl/#jogador","title":"Jogador","text":"<p>A tabela Jogador armazena informa\u00e7\u00f5es sobre os jogadores do jogo.</p> <pre><code>CREATE TABLE Jogador (\n    idPersonagem SERIAL NOT NULL,\n    moeda INTEGER,\n    idInventario INTEGER NOT NULL,\n    idYoshi INTEGER,\n    CONSTRAINT jogador_pk PRIMARY KEY (idPersonagem),\n    FOREIGN KEY (idPersonagem) REFERENCES Personagem(idPersonagem),\n    FOREIGN KEY (idInventario) REFERENCES Inventario(idInventario),\n    FOREIGN KEY (idYoshi) REFERENCES Yoshi(idYoshi)\n);\n</code></pre> <p>Colunas:</p> <ul> <li><code>idJogador</code>: Identificador \u00fanico do jogador (chave prim\u00e1ria).</li> <li><code>moeda</code>: Quantidade de moedas do jogador.</li> <li><code>idInventario</code>: Refer\u00eancia ao invent\u00e1rio.</li> <li><code>idYoshi</code>: Refer\u00eancia ao Yoshi associado.</li> </ul>"},{"location":"ddl/#instancia","title":"Instancia","text":"<p>A tabela Instancia armazena informa\u00e7\u00f5es sobre as inst\u00e2ncias de jogo.</p> <pre><code>CREATE TABLE Instancia (\n    idInstancia SERIAL NOT NULL,\n    vidaAtual INTEGER NOT NULL,\n    moedaAtual INTEGER NOT NULL,\n    idJogador INTEGER NOT NULL,\n    CONSTRAINT instancia_pk PRIMARY KEY (idInstancia)\n);\n</code></pre> <p>Colunas:</p> <ul> <li><code>idInstancia</code>: Identificador \u00fanico da inst\u00e2ncia (chave prim\u00e1ria).</li> <li><code>vidaAtual</code>: Vida atual da inst\u00e2ncia.</li> <li><code>moedaAtual</code>: Quantidade de moedas na inst\u00e2ncia.</li> <li><code>idJogador</code>: Refer\u00eancia ao jogador associado.</li> </ul> <p><p>Fonte: Gustavo Alves e Renan Ara\u00fajo</p></p>"},{"location":"dicionario/","title":"Dicion\u00e1rio","text":""},{"location":"dicionario/#tabela-jogador","title":"Tabela: <code>jogador</code>","text":"<p>Armazena as informa\u00e7\u00f5es referentes ao personagem jog\u00e1vel do usu\u00e1rio.</p> Nome Descri\u00e7\u00e3o Tipo de dado Tamanho Restri\u00e7\u00f5es de dom\u00ednio <code>nome</code> Nome \u00fanico do personagem <code>VARCHAR</code> 15 PK, FK, Not Null <code>vidaMax</code> O limite de vida do personagem <code>INTEGER</code> - Not Null, Default = 50 <code>vidaAtual</code> A vida atual do personagem <code>INTEGER</code> - Not Null, Default = 50, Check (<code>vidaAtual &lt;= vidaMax</code>) <code>faseAtual</code> Determina a fase atual do personagem <code>INTEGER</code> - FK, Not Null, Default = 1 <code>itemMagico</code> Refer\u00eancia ao item m\u00e1gico <code>INTEGER</code> - FK <code>areaAtual</code> Refer\u00eancia \u00e0 \u00e1rea onde o jogador est\u00e1 <code>VARCHAR</code> 35 FK, Not Null <code>moeda</code> Quantidade de moedas do jogador <code>INTEGER</code> - Not Null <code>idYoshi</code> Refer\u00eancia ao Yoshi associado <code>INTEGER</code> - FK <code>idInventario</code> Refer\u00eancia ao invent\u00e1rio do jogador <code>INTEGER</code> - FK"},{"location":"dicionario/#tabela-inimigo","title":"Tabela: <code>inimigo</code>","text":"<p>Armazena as informa\u00e7\u00f5es referentes aos inimigos.</p> Nome Descri\u00e7\u00e3o Tipo de dado Tamanho Restri\u00e7\u00f5es de dom\u00ednio <code>nome</code> Nome \u00fanico do inimigo <code>VARCHAR</code> 15 PK, FK, Not Null <code>vidaMax</code> O limite de vida do inimigo <code>INTEGER</code> - Not Null <code>pontos</code> Pontua\u00e7\u00e3o ao derrotar o inimigo <code>INTEGER</code> - Not Null <code>dano</code> Dano causado pelo inimigo <code>INTEGER</code> - Not Null <code>velocidade</code> Velocidade do inimigo <code>INTEGER</code> - Not Null <code>pontosExperiencia</code> Experi\u00eancia ganha ao derrotar o inimigo <code>INTEGER</code> - Not Null <code>nivel</code> Refer\u00eancia ao n\u00edvel do inimigo <code>INTEGER</code> - FK, Not Null <code>habilidade</code> Habilidade do inimigo <code>VARCHAR</code> 15 Not Null"},{"location":"dicionario/#tabela-bloco","title":"Tabela: <code>bloco</code>","text":"<p>Armazena informa\u00e7\u00f5es dos blocos.</p> Nome Descri\u00e7\u00e3o Tipo de dado Tamanho Restri\u00e7\u00f5es de dom\u00ednio <code>idBloco</code> Identificador \u00fanico do bloco <code>SERIAL</code> - PK, Not Null <code>tipo</code> Tipo do bloco <code>VARCHAR</code> 30 Not Null <code>conteudo</code> Conte\u00fado do bloco (ex.: moeda, item) <code>VARCHAR</code> 50 - <code>nivel_id</code> Refer\u00eancia ao n\u00edvel onde o bloco aparece <code>INTEGER</code> - FK, Not Null <code>posicao</code> Posi\u00e7\u00e3o do bloco no n\u00edvel <code>VARCHAR</code> 10 Not Null <code>idItem</code> Refer\u00eancia ao item contido no bloco <code>INTEGER</code> - FK <code>idYoshi</code> Refer\u00eancia ao Yoshi contido no bloco <code>INTEGER</code> - FK <code>idMoeda</code> Refer\u00eancia \u00e0 moeda contida no bloco <code>INTEGER</code> - FK"},{"location":"dicionario/#tabela-local","title":"Tabela: <code>local</code>","text":"<p>Armazena informa\u00e7\u00f5es dos locais.</p> Nome Descri\u00e7\u00e3o Tipo de dado Tamanho Restri\u00e7\u00f5es de dom\u00ednio <code>idLocal</code> Identificador \u00fanico do local <code>SERIAL</code> - PK, Not Null <code>nome</code> Nome do local <code>VARCHAR</code> 50 Not Null <code>regiao</code> Regi\u00e3o do local <code>VARCHAR</code> 50 Not Null <code>descricao</code> Descri\u00e7\u00e3o do local <code>TEXT</code> - - <code>idFase</code> Refer\u00eancia \u00e0 fase relacionada ao local <code>INTEGER</code> - FK, Not Null <code>idBloco</code> Refer\u00eancia ao bloco associado ao local <code>INTEGER</code> - FK <code>idPersonagem</code> Refer\u00eancia ao personagem associado ao local <code>INTEGER</code> - FK <code>idLoja</code> Refer\u00eancia \u00e0 loja associada ao local <code>INTEGER</code> - FK <code>idCheckpoint</code> Refer\u00eancia ao checkpoint associado ao local <code>INTEGER</code> - FK"},{"location":"dicionario/#tabela-personagem","title":"Tabela: <code>personagem</code>","text":"<p>Armazena informa\u00e7\u00f5es sobre os personagens no jogo.</p> Nome Descri\u00e7\u00e3o Tipo de dado Tamanho Restri\u00e7\u00f5es de dom\u00ednio <code>idPersonagem</code> Identificador \u00fanico do personagem <code>SERIAL</code> - PK, Not Null <code>nome</code> Nome do personagem <code>VARCHAR</code> 20 Not Null <code>vida</code> Vida do personagem <code>INTEGER</code> - Not Null <code>dano</code> Dano causado pelo personagem <code>INTEGER</code> - Not Null <code>pontos</code> Pontos associados ao personagem <code>INTEGER</code> - Not Null <code>idLocal</code> Refer\u00eancia ao local onde o personagem se encontra <code>INTEGER</code> - FK <code>tipoJogador</code> Tipo de jogador (Jogador, Inimigo, NPC) <code>VARCHAR</code> 15 Not Null"},{"location":"dicionario/#tabela-inventario","title":"Tabela: <code>inventario</code>","text":"<p>Armazena informa\u00e7\u00f5es sobre os itens no invent\u00e1rio.</p> Nome Descri\u00e7\u00e3o Tipo de dado Tamanho Restri\u00e7\u00f5es de dom\u00ednio <code>idInventario</code> Identificador \u00fanico do invent\u00e1rio <code>SERIAL</code> - PK, Not Null <code>quantidade</code> Quantidade de itens <code>INTEGER</code> - Not Null <code>idItem</code> Refer\u00eancia ao item <code>INTEGER</code> - FK, Not Null <code>idPersonagem</code> Refer\u00eancia ao personagem associado ao invent\u00e1rio <code>INTEGER</code> - FK, Not Null"},{"location":"dicionario/#tabela-instancia","title":"Tabela: <code>instancia</code>","text":"<p>Armazena informa\u00e7\u00f5es sobre as inst\u00e2ncias de jogo.</p> Nome Descri\u00e7\u00e3o Tipo de dado Tamanho Restri\u00e7\u00f5es de dom\u00ednio <code>idInstancia</code> Identificador \u00fanico da inst\u00e2ncia <code>SERIAL</code> - PK, Not Null <code>vidaAtual</code> Vida atual da inst\u00e2ncia <code>INTEGER</code> - Not Null <code>moedaAtual</code> Quantidade de moedas na inst\u00e2ncia <code>INTEGER</code> - Not Null <code>idJogador</code> Refer\u00eancia ao jogador associado \u00e0 inst\u00e2ncia <code>INTEGER</code> - FK, Not Null"},{"location":"dml/","title":"DML","text":""},{"location":"dml/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Linguagem de Manipula\u00e7\u00e3o de Dados, ou DML \u00e9 a linguagem usada para manipular os dados armazenados no banco de dados relacionais, segundo Elmasri e Navathe\u00b9 as manipula\u00e7\u00f5es sao de recupera\u00e7\u00e3o, inser\u00e7\u00e3o, exclus\u00e3o e modifica\u00e7\u00e3o de dados que em SQL representa os respectivos comandos: SELECT, INSERT, DELETE e UPDATE. Essa linguagem \u00e9 fundamental para interagir com os dados de forma f\u00e1cil e em uma linguagem de alto n\u00edvel. </p>"},{"location":"dml/#dados","title":"Dados","text":"<p>Os comandos SQL dos grupos de manipula\u00e7\u00e3o de dados foram separados para agrupar e tornar melhor a visualiza\u00e7\u00e3o de cada uma das manipula\u00e7\u00f5es de dados sob todas as tabelas do projeto.  Portanto, logo abaixo voc\u00ea encontrar\u00e1 as opera\u00e7\u00f5e: INSERT, DELETE e UPDATE.</p> INSERT <p><p>Fonte: Vin\u00edcius Mendes.</p></p> DELETE <p><p>Fonte: Vin\u00edcius Mendes.</p></p> UPDATE <p><p>Fonte: Vin\u00edcius Mendes.</p></p>"},{"location":"dml/#insert","title":"INSERT","text":"<pre><code>--- Insere yoshis na tabela Yoshi ---\nINSERT INTO Yoshi (nome, idBloco) VALUES \n    ('Yoshi Verde', 5),\n    ('Yoshi Azul', 9),\n    ('Yoshi Vermelho', 1);\n\n\n--- Insere blocos na tabela Bloco ---\nINSERT INTO Bloco (tipo, idLocal) VALUES \n    ('Bloco de Yoshi', 1),\n    ('Bloco de Moedas', 2),\n    ('Bloco de Vida Extra', 1);\n    ('Bloco de Cogumelo', 3);\n    ('Bloco de Yoshi', 2);\n    ('Bloco de Moedas', 5);\n    ('Bloco de Moedas', 6);\n    ('Bloco de Flor de Fogo', 4);\n    ('Bloco de Yoshi', 7);\n    ('Bloco de Estrela', 4);\n\n--- Insere canos na tabela Cano ---\nINSERT INTO Cano (idDestino) VALUES \n    ('Mundo 1-1'),\n    ('Mundo 2-2'),\n\n\n--- Insere mundos na tabela Mundo ---\nINSERT INTO Mundo (nome, descri\u00e7\u00e3o, nivel) VALUES \n    (1, 'Um mundo inicial cheio de novas aventuras.', 1),\n    (2, 'Um mundo aqu\u00e1tico cheio dificuldades.', 2),\n    (3, 'Um mundo de lava com perigos por todos os lados.', 3);\n\n\n--- Insere fases na tabela Fase ---\nINSERT INTO Fase (nome, nivel, idMundo) VALUES \n    ('Fase 1', 1, 1),\n    ('Fase 2', 2, 2),\n    ('Fase 3', 3, 3);\n\n\n--- Insere inimigos na tabela Inimigo ---\nINSERT INTO Inimigo (tipo) VALUES \n    ('Goomba'),         -- Tipo de inimigo 1\n    ('Koopa Troopa'),   -- Tipo de inimigo 2\n    ('Boo'),            -- Tipo de inimigo 3\n    ('Thwomp'),         -- Tipo de inimigo 4\n    ('Dry Bones'),      -- Tipo de inimigo 5\n    ('Chain Chomp'),    -- Tipo de inimigo 6\n    ('Boohemoth');      -- Tipo de inimigo 7\n\n\n--- Insere moedas na tabela Moeda ---\nINSERT INTO Moeda (valor, idBloco) VALUES \n    (1, 2),\n    (5, 6),\n    (10, 7);\n\n\n--- Insere lojas nas tabela Loja ---    \nINSERT INTO Loja (nome, idLocal) VALUES \n    ('Loja do Toad', 3),\n    ('Loja do Yoshi', 5),\n    ('Loja de Itens Raros', 7);\n\n\n--- Insere itens na tabela Item com o bloco no qual se encontra --- \nINSERT INTO Item (tipo, efeito, dura\u00e7\u00e3o, raridade, idBloco) VALUES \n    ('Cogumelo', 'Aumenta tamanho', 60, 'Comum', 4),\n    ('Flor de Fogo', 'Atira bolas de fogo', 30, 'Raro', 8),\n    ('Estrela', 'Invencibilidade', 10, 'Muito Raro', 10);\n\n\n--- Insere personagens na tabela Personagem ---\nINSERT INTO Personagem (nome, vida, dano, pontos, idLocal) VALUES \n    ('Toadette', 100, 10, 0, 6),    -- NPC 1\n    ('Shy Guy', 100, 8, 0, 2),      -- NPC 2\n    ('Donkey Kong', 100, 5, 0, 3);  -- NPC 2\n\n\n--- Insere locais na tabela Local para cada fase ---\nINSERT INTO Local (nome, descricao, idFase) VALUES \n    ('Castelo do Bowser', 'Um castelo cheio de lava e armadilhas.', 3), \n    ('Campos do Reino', 'Um campo verde com muitos Goombas.', 1),\n    ('Caverna Aqu\u00e1tica', 'Um local submerso com peixes hostis.', 2), \n    ('Deserto das Dunas', 'Um vasto deserto cheio de armadilhas.', 3), \n    ('Floresta Perdida', 'Uma floresta cheia de segredos ocultos.', 2),\n    ('Montanhas Congeladas', 'Um local coberto de neve e gelo.', 1),\n    ('Praia Ensolarada', 'Um local relaxante com perigos inesperados.', 3);\n\n\n--- Insere checkpoints na tabela Checkpoint em um local da fase ---\nINSERT INTO Checkpoint (pontua\u00e7\u00e3o, idLocal) VALUES \n    (100, 6),\n    (200, 3),\n    (300, 7);\n\n\n--- Insere jogadores na tabela Jogadores ---\nINSERT INTO Jogador (tipo, moeda, idItem, idYoshi) VALUES \n    ('Mario', 100, 1, 1), -- Jogador 1    \n    ('Luigi', 50, 2, 2),  -- Jogador 2\n    ('Peach', 75, 3, 3);  -- Jogador 3    \n\n--- Insere invatarios na tabela Invent\u00e1rio para cada jogador --- \nINSERT INTO Invent\u00e1rio (quantidade, idJogador, IdItem) VALUES \n    (5, 1, 1),\n    (3, 2, 2),\n    (7, 3, 3);\n\n\n--- Insere instancia na tabela Instancia para cada jogador --- \nINSERT INTO Instancia (vidaAtual, moedaAtual, idJogador) VALUES \n    (40, 63, 1),\n    (70, 19, 2),\n    (90, 25, 3);\n</code></pre>"},{"location":"dml/#delete","title":"DELETE","text":"<pre><code>BEGIN TRANSACTION;\n\n--- Excluir um personagem da tabela Personagem ---\n-- Primeiro deletamos os registros dependentes da tabela Local (referenciada por Checkpoint, Loja, etc.)\nDELETE FROM Checkpoint WHERE idLocal = 1; -- Supondo que o personagem est\u00e1 no Local 1\nDELETE FROM Loja WHERE idLocal = 1;\nDELETE FROM Personagem WHERE idPersonagem = 1;\n\n\n--- Excluir um bloco da tabela Bloco ---\n-- Primeiro deletamos os registros dependentes (Item e Moeda)\nDELETE FROM Item WHERE idBloco = 1; -- Supondo que o bloco com id 1 est\u00e1 associado\nDELETE FROM Moeda WHERE idBloco = 1;\n-- Depois, deletamos o bloco\nDELETE FROM Bloco WHERE idBloco = 1;\n\n\n--- Excluir um jogador da tabela Jogador ---\n-- Primeiro deletamos os registros dependentes (Instancia e Invent\u00e1rio)\nDELETE FROM Instancia WHERE idJogador = 1;\nDELETE FROM Invent\u00e1rio WHERE idJogador = 1;\n-- Depois, deletamos o jogador\nDELETE FROM Jogador WHERE idJogador = 1;\n\n\n--- Excluir um Yoshi da tabela Yoshi ---\n-- Primeiro deletamos os registros dependentes (Jogador)\nDELETE FROM Jogador WHERE idYoshi = 1; -- Supondo que o Yoshi com id 1 est\u00e1 associado\n-- Deletamos o Yoshi\nDELETE FROM Yoshi WHERE idYoshi = 1;\n\n\n--- Excluir uma fase da tabela Fase ---\n-- Primeiro deletamos os registros dependentes (Local)\nDELETE FROM Local WHERE idFase = 1; -- Supondo que a fase com id 1 est\u00e1 associada\n-- Deletamos a fase\nDELETE FROM Fase WHERE idFase = 1;\n\n\n--- Excluir um mundo da tabela Mundo ---\n-- Primeiro deletamos os registros dependentes (Fase)\nDELETE FROM Fase WHERE idMundo = 1; -- Supondo que o mundo com id 1 est\u00e1 associado\n-- Deletamos o mundo\nDELETE FROM Mundo WHERE idMundo = 1;\n\n\n--- Excluir um cano da taela Cano ---\n-- Primeiro deletamos os registros dependentes (Mundo)\nDELETE FROM Mundo WHERE idDestino = 1; -- Supondo que o cano com id 1 est\u00e1 associado\n-- Deletamos o cano\nDELETE FROM Cano WHERE idCano = 1;\n\n\n--- Excluir um item da tabela Item ---\n-- Deletamos o item diretamente, pois depende apenas de Bloco\nDELETE FROM Item WHERE idItem = 1;\n\n\n--- Excluir um moeda da tabela Moeda ---\n-- Deletamos a moeda diretamente, pois depende apenas de Bloco\nDELETE FROM Moeda WHERE idMoeda = 1;\n\n\n--- Excluir um inimigo da tabela Inimigo ---\n-- Deletamos o inimigo diretamente, pois n\u00e3o depende de nenhuma outra tabela\nDELETE FROM Inimigo WHERE idInimigo = 1;\n\n\n--- Excluir um loja da tabela Loja ---\n-- Deletamos a loja diretamente, considerando sua depend\u00eancia de Local\nDELETE FROM Loja WHERE idLoja = 1;\n\n\n--- Excluir um checkpoint da tabela Checkpoint ---\n-- Deletamos o checkpoint diretamente, considerando sua depend\u00eancia de Local\nDELETE FROM Checkpoint WHERE idCheckpoint = 1;\n</code></pre>"},{"location":"dml/#update","title":"UPDATE","text":"<pre><code>--- Atualizar um personagem da tabela Personagem ---\n-- Atualizar o nome e a vida de um personagem com `idPersonagem = 1`\nUPDATE Personagem \nSET nome = 'Wario', vida = 100 \nWHERE idPersonagem = 1;\n\n--- Atualizar um bloco da tabela Bloco ---\n-- Atualizar o tipo de bloco com `idBloco = 1`\nUPDATE Bloco \nSET tipo = 'Bloco Surpresa' \nWHERE idBloco = 1;\n\n--- Atualizar um jogador da tabela Jogador ---\n-- Atualizar o tipo e a moeda de um jogador com `idJogador = 1`\nUPDATE Jogador \nSET tipo = 'Toad', moeda = 50 \nWHERE idJogador = 1;\n\n--- Atualizar um Yoshi da tabela Yoshi ---\n-- Atualizar o nome de um Yoshi com `idYoshi = 1`\nUPDATE Yoshi \nSET nome = 'Yoshi Rosa' \nWHERE idYoshi = 1;\n\n--- Atualizar uma fase da tabela Fase ---\n-- Atualizar o n\u00edvel e o nome de uma fase com `idFase = 1`\nUPDATE Fase \nSET nivel = 2, nome = 'Fase da Floresta' \nWHERE idFase = 1;\n\n--- Atualizar um mundo da tabela Mundo ---\n-- Atualizar o nome e a descri\u00e7\u00e3o de um mundo com `idMundo = 1`\nUPDATE Mundo \nSET nome = 3, descricao = 'Um mundo cheio de estrelas.' \nWHERE idMundo = 1;\n\n--- Atualizar um cano da tabela Cano ---\n-- Atualizar o destino de um cano com `idCano = 1`\nUPDATE Cano \nSET idDestino = 'Mundo 1-3' \nWHERE idCano = 1;\n\n--- Atualizar um item da tabela Item ---\n-- Atualizar o tipo e a raridade de um item com `idItem = 1`\nUPDATE Item \nSET tipo = 'Cogumelo Verde', 'Recupera vida', raridade = 'Comum' \nWHERE idItem = 1;\n\n--- Atualizar uma moeda da tabela Moeda ---\n-- Atualizar o valor de uma moeda com `idMoeda = 1`\nUPDATE Moeda \nSET valor = 5 \nWHERE idMoeda = 1;\n\n--- Atualizar um inimigo da tabela Inimigo ---\n-- Atualizar o tipo de um inimigo com `idInimigo = 1`\nUPDATE Inimigo \nSET tipo = 'Peixe' \nWHERE idInimigo = 1;\n\n--- Atualizar uma loja da tabela Loja ---\n-- Atualizar o nome de uma loja com `idLoja = 1`\nUPDATE Loja \nSET nome = 'Loja do Ti\u00e3o' \nWHERE idLoja = 1;\n\n--- Atualizar um checkpoint da tabela Checkpoint ---\n-- Atualizar a pontua\u00e7\u00e3o de um checkpoint com `idCheckpoint = 1`\nUPDATE Checkpoint \nSET pontua\u00e7\u00e3o = 150 \nWHERE idCheckpoint = 1;\n\n--- Atualizar uma inst\u00e2ncia da tabela Instancia ---\n-- Atualizar a vida e a moeda atual de uma inst\u00e2ncia com `idInstancia = 1`\nUPDATE Instancia \nSET vidaAtual = 80, moedaAtual = 20 \nWHERE idInstancia = 1;\n\n--- Atualizar um invent\u00e1rio da tabela Invent\u00e1rio ---\n-- Atualizar a quantidade de um item no invent\u00e1rio com `idInvent\u00e1rio = 1`\nUPDATE Invent\u00e1rio \nSET quantidade = 10 \nWHERE idInvent\u00e1rio = 1;\n\n--- Atualizar um local da tabela Local ---\n-- Atualizar o nome e a descri\u00e7\u00e3o de um local com `idLocal = 1`\nUPDATE Local \nSET nome = 'Castelo do Wendy', descricao = 'Um castelo perigoso cheio de armadilhas.' \nWHERE idLocal = 1;\n</code></pre>"},{"location":"dml/#referencia-bibliografica","title":"Refer\u00eancia Bibliogr\u00e1fica","text":"<p>1. ELMASRI, Ramez; NAVATHE, Shamkant B. Sistemas de banco de dados. Tradu\u00e7\u00e3o: Daniel Vieira. Revis\u00e3o t\u00e9cnica: Enzo Seraphim; Thatyana de Faria Piola Seraphim. 6. ed. S\u00e3o Paulo: Pearson Addison Wesley, 2011. Cap\u00edtulo 2 Conceitos e arquitetura do sistema de banco de dados, t\u00f3pico 2.3 Linguagens e interfaces do banco de dados, p\u00e1ginas 24 e 25.</p>"},{"location":"dql/","title":"DQL","text":""},{"location":"dql/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>A Data Query Language (DQL) \u00e9 um subconjunto da linguagem SQL utilizado para consultar e recuperar dados armazenados em um banco de dados. O principal objetivo da DQL \u00e9 permitir que os usu\u00e1rios extraiam informa\u00e7\u00f5es relevantes e significativas de uma base de dados, conforme suas necessidades. O foco da DQL n\u00e3o \u00e9 alterar ou manipular a estrutura ou os dados, mas sim realizar consultas.</p>"},{"location":"dql/#consultas","title":"Consultas","text":""},{"location":"dql/#listar-todos-os-yoshis-e-seus-blocos-associados","title":"Listar todos os Yoshis e seus blocos associados","text":"<pre><code>SELECT Yoshi.nome, Bloco.tipo\nFROM Yoshi\nJOIN Bloco ON Yoshi.idBloco = Bloco.idBloco;\n</code></pre>"},{"location":"dql/#listar-todos-os-inimigos-e-seu-tipo","title":"Listar todos os inimigos e seu tipo","text":"<pre><code>SELECT idInimigo, tipo\nFROM Inimigo;\n</code></pre>"},{"location":"dql/#listar-todos-os-itens-no-inventario-de-um-jogador-especifico","title":"Listar todos os itens no invent\u00e1rio de um jogador espec\u00edfico","text":"<pre><code>SELECT Item.tipo, Invent\u00e1rio.quantidade\nFROM Invent\u00e1rio\nJOIN Item ON Invent\u00e1rio.IdItem = Item.idItem\nWHERE Invent\u00e1rio.idJogador = 1;\n</code></pre>"},{"location":"dql/#listar-o-jogador-seu-yoshi-e-suas-moedas","title":"Listar o jogador seu Yoshi e suas moedas","text":"<pre><code>SELECT Jogador.idJogador, Jogador.moeda, Yoshi.nome\nFROM Jogador\nJOIN Yoshi ON Jogador.idYoshi = Yoshi.idYoshi;\n</code></pre>"},{"location":"dql/#listar-todos-os-checkpoints-de-um-determinado-local","title":"Listar todos os checkpoints de um determinado local","text":"<pre><code>SELECT Checkpoint.idCheckpoint, Checkpoint.pontua\u00e7\u00e3o\nFROM Checkpoint\nJOIN Local ON Checkpoint.idLocal = Local.idLocal\nWHERE Local.nome = 'Mundo 1';\n</code></pre>"},{"location":"dql/#listar-todos-os-itens-de-um-bloco-especifico","title":"Listar todos os itens de um bloco espec\u00edfico","text":"<pre><code>SELECT Item.tipo, Item.efeito\nFROM Item\nJOIN Bloco ON Item.idBloco = Bloco.idBloco\nWHERE Bloco.idBloco=2;\n</code></pre>"},{"location":"dql/#listar-todas-as-fases-e-seus-mundos","title":"Listar todas as fases e seus mundos","text":"<pre><code>SELECT Fase.nome, Mundo.nome\nFROM Fase\nJOIN Mundo ON Fase.idMundo = Mundo.idMundo;\n</code></pre>"},{"location":"entidade-relacionamento/","title":"Modelo Entidade Relacionamento","text":""},{"location":"entidade-relacionamento/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O Diagrama Entidade-Relacionamento (DER) \u00e9 uma representa\u00e7\u00e3o gr\u00e1fica composta por diversos elementos que descrevem os componentes do modelo Entidade-Relacionamento, como entidades, atributos (incluindo chaves), relacionamentos e restri\u00e7\u00f5es estruturais.</p> <p>Esse diagrama oferece uma perspectiva l\u00f3gica do banco de dados, permitindo uma compreens\u00e3o ampla e organizada da estrutura de dados de um sistema.</p>"},{"location":"entidade-relacionamento/#versao-atualizada","title":"Vers\u00e3o atualizada","text":"<p> Figura 1: Diagrama Entidade Relacional 4.0 Super Mario Bros</p> Vers\u00e3o 1    Figura 2: Diagrama Entidade Relacional 1.0 Super Mario Bros  Vers\u00e3o 2    Figura 3: Diagrama Entidade Relacional 2.0 Super Mario Bros  Vers\u00e3o 3    Figura 3: Diagrama Entidade Relacional 3.0 Super Mario Bros"},{"location":"modelo-relacional/","title":"Modelo Relacional","text":""},{"location":"modelo-relacional/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O modelo relacional \u00e9 um modelo de dados representativo, amplamente utilizado como base para Sistemas Gerenciadores de Banco de Dados (SGBDs). Ele segue o princ\u00edpio de que todas as informa\u00e7\u00f5es s\u00e3o organizadas em tabelas (ou rela\u00e7\u00f5es, em termos matem\u00e1ticos), permitindo uma estrutura\u00e7\u00e3o clara e eficiente dos dados, com foco na simplicidade e na consist\u00eancia.</p>"},{"location":"modelo-relacional/#versao-atualizada","title":"Vers\u00e3o atualizada","text":"<p>Figura 1: Modelo Relacional 3.0 Super Mario Bros </p> Vers\u00e3o 1    Figura 2: Diagrama Entidade Relacional 1.0 Super Mario Bros  Vers\u00e3o 2    Figura 3: Diagrama Entidade Relacional 2.0 Super Mario Bros"},{"location":"triggers/","title":"Triggers e Stored Procedures","text":""},{"location":"triggers/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Triggers e Stored Procedures s\u00e3o mecanismos do banco de dados utilizados para automa\u00e7\u00e3o e integridade dos dados. Triggers s\u00e3o gatilhos que executam a\u00e7\u00f5es automaticamente em resposta a eventos como inser\u00e7\u00f5es, atualiza\u00e7\u00f5es ou exclus\u00f5es em uma tabela, sendo \u00fateis para auditoria, manuten\u00e7\u00e3o da integridade referencial e implementa\u00e7\u00e3o de regras de neg\u00f3cio. J\u00e1 Stored Procedures s\u00e3o conjuntos de comandos SQL armazenados no banco, que podem ser executados sob demanda para realizar opera\u00e7\u00f5es complexas, otimizando o desempenho e reduzindo a redund\u00e2ncia no c\u00f3digo. Ambos contribuem para a seguran\u00e7a, efici\u00eancia e organiza\u00e7\u00e3o da l\u00f3gica de neg\u00f3cios no banco de dados.</p>"},{"location":"triggers/#triggers","title":"Triggers","text":"Trigger: atualizar_vida <pre><code>-- Fun\u00e7\u00e3o que ser\u00e1 chamada pelo trigger\nCREATE OR REPLACE FUNCTION atualizar_vida() RETURNS TRIGGER AS $$ \nBEGIN\n-- A vida m\u00e1xima ser\u00e1 o n\u00edvel multiplicado por 100\nIF NEW.vida &gt; (NEW.nivel * 100) THEN\n    NEW.vida := (NEW.nivel * 100);  -- Limita a vida ao valor m\u00e1ximo\nEND IF;\n\n-- Se a vida for menor que o m\u00ednimo, ajusta para 0\nIF NEW.vida &lt; 0 THEN\n    NEW.vida := 0;  -- A vida n\u00e3o pode ser negativa\nEND IF;\n\nRETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER trg_atualizar_vida\nBEFORE UPDATE ON personagem\nFOR EACH ROW\nEXECUTE FUNCTION atualizar_vida();\n</code></pre> Trigger: after_update_vida_personagem <pre><code>-- Fun\u00e7\u00e3o que ser\u00e1 chamada pelo trigger\nCREATE OR REPLACE FUNCTION after_update_vida_personagem() RETURNS TRIGGER AS $$ \nBEGIN\nIF NEW.vida &lt;= 0 THEN\n    UPDATE personagem \n    SET pontos = GREATEST(0, pontos - 10) \n    WHERE idPersonagem = NEW.idPersonagem;\nEND IF;\nRETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER trg_after_update_vida_personagem\nAFTER UPDATE ON personagem\nFOR EACH ROW\nEXECUTE FUNCTION after_update_vida_personagem();\n</code></pre> Trigger: verificar_unicidade_personagem <pre><code>-- Fun\u00e7\u00e3o que ser\u00e1 chamada pelo trigger\nCREATE OR REPLACE FUNCTION verificar_unicidade_personagem() RETURNS TRIGGER AS $$ \nBEGIN\nIF (SELECT COUNT(*) FROM Jogador WHERE idPersonagem = NEW.idPersonagem) &gt; 0 AND\n   (SELECT COUNT(*) FROM Inimigo WHERE idPersonagem = NEW.idPersonagem) &gt; 0 THEN\n    RAISE EXCEPTION 'Um personagem n\u00e3o pode ser Jogador e Inimigo ao mesmo tempo!';\nEND IF;\nRETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER trg_verificar_unicidade_jogador\nBEFORE INSERT OR UPDATE ON Jogador\nFOR EACH ROW\nEXECUTE FUNCTION verificar_unicidade_personagem();\n\nCREATE TRIGGER trg_verificar_unicidade_inimigo\nBEFORE INSERT OR UPDATE ON Inimigo\nFOR EACH ROW\nEXECUTE FUNCTION verificar_unicidade_personagem();\n</code></pre> Trigger: impedir_moeda_inventario_para_inimigos <pre><code>CREATE OR REPLACE FUNCTION impedir_moeda_inventario_para_inimigos() RETURNS TRIGGER AS $$ \nBEGIN\nIF EXISTS (SELECT 1 FROM Inimigo WHERE idPersonagem = NEW.idPersonagem) THEN\n    IF NEW.moeda IS NOT NULL OR NEW.idInventario IS NOT NULL THEN\n        RAISE EXCEPTION 'Inimigos n\u00e3o podem ter moedas ou invent\u00e1rio!';\n    END IF;\nEND IF;\nRETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER trg_impedir_moeda_inventario_inimigo\nBEFORE INSERT OR UPDATE ON Jogador\nFOR EACH ROW\nEXECUTE FUNCTION impedir_moeda_inventario_para_inimigos();\n</code></pre> Trigger: remover_jogador_ou_inimigo_ao_excluir_personagem <pre><code>CREATE OR REPLACE FUNCTION remover_jogador_ou_inimigo_ao_excluir_personagem()\nRETURNS TRIGGER AS $$\nBEGIN\nDELETE FROM Jogador WHERE idPersonagem = OLD.idPersonagem;\nDELETE FROM Inimigo WHERE idPersonagem = OLD.idPersonagem;\nRETURN OLD;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER trigger_remover_jogador_ou_inimigo_ao_excluir_personagem\nAFTER DELETE ON Personagem\nFOR EACH ROW\nEXECUTE FUNCTION remover_jogador_ou_inimigo_ao_excluir_personagem();\n</code></pre> Trigger: atualizar_posicao_checkpoint <pre><code>CREATE OR REPLACE FUNCTION atualizar_posicao_checkpoint() RETURNS TRIGGER AS $$ \nBEGIN\nUPDATE jogador\nSET idLocal = NEW.idLocal\nWHERE idPersonagem = NEW.idPersonagem;\nRETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER trg_atualizar_posicao_checkpoint\nAFTER INSERT ON checkpoint\nFOR EACH ROW\nEXECUTE FUNCTION atualizar_posicao_checkpoint();\n</code></pre> Trigger: garantir_vida_minima <pre><code>CREATE OR REPLACE FUNCTION garantir_vida_minima() RETURNS TRIGGER AS $$ \nBEGIN\nIF NEW.vida &lt; 1 THEN\n    NEW.vida := 1;\nEND IF;\nRETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER trg_garantir_vida_minima\nBEFORE INSERT ON personagem\nFOR EACH ROW\nEXECUTE FUNCTION garantir_vida_minima();\n</code></pre> Trigger: atualizar_moedas_jogador <pre><code>CREATE OR REPLACE FUNCTION atualizar_moedas_jogador() RETURNS TRIGGER AS $$ \nBEGIN\nUPDATE jogador\nSET moeda = moeda + NEW.valor\nWHERE idPersonagem = NEW.idPersonagem;\nRETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER trg_atualizar_moedas_jogador\nAFTER INSERT ON jogador\nFOR EACH ROW\nEXECUTE FUNCTION atualizar_moedas_jogador();\n</code></pre>"}]}